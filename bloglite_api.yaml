openapi: 3.0.0
info:
  title: BlogLite API
  description: >
    <div> <h1> RESTful API for BlogLite application </h1>
    <table>
     <th>Error code</th>
     <th>Description</th>
     <tr>
       <td>USER001</td>
       <td>Username already exists</td>
     </tr>
     <tr>
       <td>USER002</td>
       <td>No special characters or numbers allowed in name field</td>
     </tr>
     <tr>
       <td>USER003</td>
       <td>No special characters allowed in username</td>
     </tr>
     <tr>
       <td>USER004</td> <td>Username is required</td>
     </tr>
     <tr>
       <td>USER005</td> <td>First name is required</td>
     </tr>
     <tr>
       <td>POST001</td>
       <td>Title required</td>
     </tr>
     <tr>
       <td>POST002</td>
       <td>Description required</td>
     </tr>
     <tr>
       <td>POST003</td> <td>Invalid username</td>
     </tr></table></div>
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/


paths:
  /api/user/{username}:
    description: End point to read, update and delete a user resource with username = username.
    get:
      description: Operation to Read user resource.
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: 'johndoe'
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: user object
                type: object
                properties:
                  username:
                    type: string
                    example: 'johndoe'
                  first_name:
                    type: string
                    example: 'John'
                  last_name:
                    type: string
                    example: 'Doe'
                  followers:
                    type: integer
                    example: 11
                  following:
                    type: integer
                    example: 11
                  post_count:
                    type: integer
                    example: 11

        '500':
          description: Internal Server Error
        '404':
          description: User not found

    put:
      description: Operation to update the user resource.
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: 'johndoe'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                  first_name:
                    type: string
                    example: "John"
                  last_name:
                    type: string
                    example: "Doe"
                  username:
                    type: string
                    example : 'someusername'
      responses:
        '200':
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    example: "John"
                  last_name:
                    type: string
                    example: "Doe"
                  username:
                    type: string
                    example : 'someusername'


        '404':
          description: User not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      description: Operation to delete the user resource
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: 'johndoe'
      responses:
        '200':
          description: Successfully Deleted
        '404':
          description: User not found
        '500':
          description: Intenal Server Error


  /api/user/{username}/post:
    description: Url to get the the list of posts a user with username has posted in.
    get:
      description: URL to get the list of posts, the user has posted.
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: 'johndoe'
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    post_id:
                      type: integer
                      example: 11
                    title:
                      type: string
                      example: 'Some Title'
                    description:
                      type: string
                      example: 'Some description'
                    author:
                      type: string
                      example: 'johndoe'
                    likes:
                      type: integer
                      example: 11
                    comments:
                      type: integer
                      example: 11
                    images_attached:
                      type: integer
                      example: 11

        '400':
          description: Invalid username
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: User does not have any posts
        '500':
          description: Internal Server Error

    post:
      description: Add post.
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: 'johndoe'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                    type: string
                    example: 'Some Title'
                description:
                    type: string
                    example: 'Some description'


      responses:
        '201':
          description: Post successfully created
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    post_id:
                      type: integer
                      example: 11
                    title:
                      type: string
                      example: 'Some Title'
                    description:
                      type: string
                      example: 'Some description'
                    author:
                      type: string
                      example: 'johndoe'
        '404':
          description: User not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/user/{username}/delete/{post_id}:
    description: URL to delete a post
    delete:
      description: URL to delete a post uploaded by user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: 'johndoe'
        - in: path
          name: post_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully deleted
        '400':
          description: Invalid Username or Post Id.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Post by user not found
        '500':
          description: Internal Server Error

  /api/user/{username}/put/{post_id}:
      description: URL to update a post
      put:
        description: URL to update a post uploaded by user
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                      type: string
                      example: 'Some Title'
                  description:
                      type: string
                      example: 'Some description'

        parameters:
          - in: path
            name: username
            required: true
            schema:
              type: string
              example: 'johndoe'
          - in: path
            name: post_id
            required: true
            schema:
              type: integer
              example: 10
        responses:
          '200':
            description: Successfully updated
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    title:
                      type: string
                      example: 'Some Title'
                    description:
                      type: string
                      example: 'Some description'

          '400':
            description: Invalid Username or Post Id.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error_code:
                      type: string
                    error_message:
                      type: string
          '404':
            description: Post by user not found
          '500':
            description: Internal Server Error
